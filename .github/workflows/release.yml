name: "Release Workflow"
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-M[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-RC[0-9]+"
    branches:
      - "master"
      - "main"
  workflow_dispatch:

jobs:
  release-tag-job:
    name: "release-tag-job-name"
    runs-on: ubuntu-latest
    outputs:
      tag-value: ${{ steps.check-tag.outputs.tag-value }}
    steps:
      - name: Get tag
        id: check-tag
        continue-on-error: true
        run: |
          # echo 'refs/tags/v0.3.2-RC1' | sed  's/refs\/tags\/v\(.*\)$/\1/;tx;q100;:x' #if [ $? -eq 0 ]; then else fi
          echo ::set-output name=tag-value::$(echo ${{ github.event.ref }} | sed  's/refs\/tags\/v\(.*\)$/\1/;tx;q100;:x')
          # ... check if everything  clean to make a release with this tag

      - name: INFO TAG VALUE
        if: steps.check-tag.outcome == 'success'
        run: echo "Tag '${{ steps.check-tag.outputs.tag-value }}' will be publish."
      - name: STOP RELEASE WORKFLOW
        if: steps.check-tag.outcome == 'failure'
        run: |
          echo The git refs '${{ github.event.ref }}' is not a proper tag to publish.
          exit 1

      - name: TEST
        run: |
          echo '{"environment": "${{ github.ref_name }}", "tag": "${{ env.TAG }}", ${{ github.ref_type }}}'

      - name: Set ENV & TAG convention
        run: |
          branchPrefix=$(git rev-parse --abbrev-ref HEAD | sed -E 's/(^ATA\-[0-9]+).*/\1/' | tr '[:upper:]' '[:lower:]')
          if [[ ${GITHUB_REF_TYPE} == "tag" ]]
          then
              tag=$(echo $GITHUB_REF_NAME)
              echo "TAG=$tag" >> $GITHUB_ENV
              echo "::set-output name=tag::$tag"
          else
              revCount=$(git rev-list HEAD --count)
              shaShort=$(git rev-parse --short HEAD)
              tag="${branchPrefix}-${revCount}-${shaShort}"
              echo "TAG=$tag" >> $GITHUB_ENV
              echo "::set-output name=tag::$tag"
          fi
          echo "ENV=$branchPrefix" >> $GITHUB_ENV
          . $GITHUB_ENV && echo "Env short name set to $ENV. Image tag set to $TAG"

  # test-tag:
  #   needs: [release-tag-job]
  #   name: "test tag job"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: |
  #         echo test1: ${{ needs.release-tag-job.outputs.tag-value }}
  #         echo test2: $RELEASE_VERSION
  #       env:
  #         RELEASE_VERSION: ${{ needs.release-tag-job.outputs.tag-value }}
