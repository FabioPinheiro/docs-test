name: "Release Workflow"
on:
  push:
    tags:
      # - "v[0-9]+.[0-9]+.[0-9]+"
      # - "v[0-9]+.[0-9]+.[0-9]+-M[0-9]+"
      # - "v[0-9]+.[0-9]+.[0-9]+-RC[0-9]+"
      - "**"
    branches:
      - "master"
      - "main"
  workflow_dispatch:

jobs:
  job-context:
    name: "job-context-name"
    runs-on: ubuntu-latest
    outputs:
      context_tag: ${{ steps.git-context.outputs.tag }}
      context_ref_type: ${{ steps.git-context.outputs.ref_type }}
      context_ref_name: ${{ steps.git-context.outputs.ref_name }}
      context_shaShort: ${{ steps.git-context.outputs.shaShort }}
      context_branch_prefix: ${{ steps.git-context.outputs.branch_prefix }}
    steps:
      - name: Get git context
        id: git-context

        run: |
          if [[ ${{ github.ref_type }} == tag ]]
          then
            branch_prefix=${{ github.ref_name }}
          elif [[ ${{ github.ref_type }} == branch ]]
          then
            branch_prefix=$(echo ${{ github.ref_name }} | sed -E 's/(^ATA\-[0-9]+).*/\1/' | tr '[:upper:]' '[:lower:]')
          else
            echo "The 'github.ref_type' ${{ github.ref_type }} is not 'branch' or 'tag'"
            exit 1
          fi

          echo ::set-output name=tag::$(echo ${{ github.event.ref }} | sed  's/refs\/tags\/v\(.*\)$/\1/;tx;q100;:x')
          echo ::set-output name=ref_type::${{ github.ref_type }}
          echo ::set-output name=ref_name::${{ github.ref_name }}
          echo ::set-output name=shaShort::$(echo ${{ github.sha }} | head -c 7)
          echo ::set-output name=branch_prefix::$branch_prefix

      - name: Dump context
        run: |
          echo 'Dump GitHub context = ${{ toJSON(github) }}'
          echo 'Dump job context = ${{ toJSON(job) }}'
          echo 'Dump steps context = ${{ toJSON(steps) }}'
          echo 'Dump runner context = ${{ toJSON(runner) }}'
          echo 'Dump strategy context = ${{ toJSON(strategy) }}'
          echo 'Dump matrix context = ${{ toJSON(matrix) }}'

          echo 'Dump my context = { ${{ steps.git-context.outputs.tag-value }}
            "ref_type": "${{ steps.git-context.outputs.ref_type }}",
            "ref_name": "${{ steps.git-context.outputs.ref_name }}",
            "shaShort": "${{ steps.git-context.outputs.shaShort }}"
          }'

  test-context:
    if: (github.ref_type == 'branch') && (github.ref_name == 'main')
    needs: [job-context]
    name: "Dump My context"
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo 'Dump my context = {
            "context_tag": "${{ needs.job-context.outputs.context_tag }}",
            "context_ref_type": "${{ needs.job-context.outputs.context_ref_type }}",
            "context_ref_name": "${{ needs.job-context.outputs.context_ref_name }}",
            "context_shaShort": "${{ needs.job-context.outputs.context_shaShort }}",
            "context_branch_prefix": "${{ needs.job-context.outputs.context_branch_prefix }}"
          }'

  test-context2:
    if: needs.job-context.outputs.context_ref_type == 'branch'
    needs: [job-context]
    name: "Dump My context"
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo 'Dump my context = {
            "context_tag": "${{ needs.job-context.outputs.context_tag }}",
            "context_ref_type": "${{ needs.job-context.outputs.context_ref_type }}",
            "context_ref_name": "${{ needs.job-context.outputs.context_ref_name }}",
            "context_shaShort": "${{ needs.job-context.outputs.context_shaShort }}",
            "context_branch_prefix": "${{ needs.job-context.outputs.context_branch_prefix }}"
          }'
      #   continue-on-error: true
      #   run: |
      #     # echo 'refs/tags/v0.3.2-RC1' | sed  's/refs\/tags\/v\(.*\)$/\1/;tx;q100;:x' # if [ $? -eq 0 ]; then else fi
      #     echo ::set-output name=tag-value::$(echo ${{ github.event.ref }} | sed  's/refs\/tags\/v\(.*\)$/\1/;tx;q100;:x')
      #     # ... check if everything  clean to make a release with this tag

      # - name: INFO TAG VALUE
      #   if: steps.check-tag.outcome == 'success'
      #   run: echo "Tag '${{ steps.check-tag.outputs.tag-value }}' will be publish."
      # - name: STOP RELEASE WORKFLOW
      #   if: steps.check-tag.outcome == 'failure'
      #   run: |
      #     echo The git refs '${{ github.event.ref }}' is not a proper tag to publish.
      #     exit 1

      # - name: Set ENV & TAG convention
      #   run: |
      #     branchPrefix=$(git rev-parse --abbrev-ref HEAD | sed -E 's/(^ATA\-[0-9]+).*/\1/' | tr '[:upper:]' '[:lower:]')
      #     if [[ ${GITHUB_REF_TYPE} == "tag" ]]
      #     then
      #         tag=$(echo $GITHUB_REF_NAME)
      #         echo "TAG=$tag" >> $GITHUB_ENV
      #         echo "::set-output name=tag::$tag"
      #     else
      #         revCount=$(git rev-list HEAD --count)
      #         shaShort=$(git rev-parse --short HEAD)
      #         tag="${branchPrefix}-${revCount}-${shaShort}"
      #         echo "TAG=$tag" >> $GITHUB_ENV
      #         echo "::set-output name=tag::$tag"
      #     fi
      #     echo "ENV=$branchPrefix" >> $GITHUB_ENV
      #     . $GITHUB_ENV && echo "Env short name set to $ENV. Image tag set to $TAG"
